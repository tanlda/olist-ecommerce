apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: catalog
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: Immediate
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: catalog-pv-0
spec:
  capacity:
    storage: 2Gi
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: catalog
  claimRef:
    namespace: {{ $.Release.Namespace }}
    name: catalog-data-catalog-0  # reserved
  hostPath:
    path: /kube/ecommerce/io/lakehouse/catalog-pv-0
  nodeAffinity:
    {{- .Values.master.volume | toYaml | nindent 4 }}
---
apiVersion: stackgres.io/v1
kind: SGInstanceProfile
metadata:
  name: catalog-profile
  namespace: {{ .Release.Namespace }}
spec:
  cpu: "256m"
  memory: "1Gi"
---
apiVersion: stackgres.io/v1
kind: SGPostgresConfig
metadata:
  name: catalog-pgconfig
  namespace: {{ .Release.Namespace }}
spec:
  postgresVersion: "16"
  postgresql.conf:
    shared_buffers: "512MB"
    random_page_cost: "1.5"
    password_encryption: "scram-sha-256"
    shared_preload_libraries: "pg_stat_statements,auto_explain"
    log_checkpoints: "on"
---
apiVersion: stackgres.io/v1
kind: SGPoolingConfig
metadata:
  name: catalog-poolconfig
  namespace: {{ .Release.Namespace }}
spec:
  pgBouncer:
    pgbouncer.ini:
      pgbouncer:
        pool_mode: transaction
        max_client_conn: "1000"
        default_pool_size: "80"
---
apiVersion: stackgres.io/v1
kind: SGScript
metadata:
  name: catalog-scripts
  namespace: {{ .Release.Namespace }}
spec:
  scripts:
    - name: create-iceberg-user
      script: CREATE USER iceberg PASSWORD 'iceberg' SUPERUSER;
    - name: create-iceberg-database
      script: CREATE DATABASE iceberg OWNER iceberg;
    - name: create-functions
      database: iceberg
      scriptFrom:
        configMapKeyRef:
          name: stackgres-scripts
          key: functions.sql
---
apiVersion: stackgres.io/v1
kind: SGCluster
metadata:
  name: catalog
  namespace: {{ .Release.Namespace }}
spec:
  postgres:
    version: "16"
    extensions: [ ]
  instances: 1
  sgInstanceProfile: catalog-profile
  profile: development
  pods:
    scheduling:
      nodeSelector:
        kubernetes.io/hostname: master
    persistentVolume:
      storageClass: catalog
      size: 2Gi
  managedSql:
    scripts:
      - sgScript: catalog-scripts
  configurations:
    sgPostgresConfig: catalog-pgconfig
    sgPoolingConfig: catalog-poolconfig
    credentials:
      users:
        {{- .Values.stackgres.users | toYaml | nindent 8 }}
---
