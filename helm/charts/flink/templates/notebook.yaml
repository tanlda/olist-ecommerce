apiVersion: v1
kind: PersistentVolume
metadata:
  name: flink-notebook-pv
spec:
  storageClassName: local
  accessModes: [ "ReadWriteMany" ]
  capacity:
    storage: 8Gi
  volumeMode: Filesystem
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /kube/ecommerce/flink/notebook
  nodeAffinity:
{{ .Values.master.volume | toYaml | nindent 4 }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: notebook-pvc
  namespace: {{ .Release.Namespace }}
spec:
  storageClassName: local
  accessModes: [ "ReadWriteMany" ]
  resources:
    requests:
      storage: 8Gi
  volumeName: flink-notebook-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notebook
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notebook
  template:
    metadata:
      labels:
        app: notebook
    spec:
      containers:
        - name: notebook
          image: registry.io/notebook:flink
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /opt/flink/notebook
              name: notebook
          ports:
            - name: notebook
              containerPort: 8888
            - name: flink
              containerPort: 8081
      volumes:
        - name: notebook
          persistentVolumeClaim:
            claimName: notebook-pvc
      affinity:
        {{- .Values.master.affinity | toYaml | nindent 8 }}
---
apiVersion: v1
kind: Service
metadata:
  name: notebook
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: notebook
  type: LoadBalancer
  loadBalancerIP: {{ .Values.notebook.service.host }}
  ports:
    - name: jupyter
      port: 80
      targetPort: 8888
    - name: flink
      port: 8081
---
kind: Service
apiVersion: v1
metadata:
  name: notebook-headless
spec:
  clusterIP: None
  selector:
    app: notebook
